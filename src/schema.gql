# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type LoginStudentResponse {
  accessToken: String!
}

type Student {
  id: ID!
  name: String!
  email: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Subject {
  id: Int!
  name: String!
}

type Class {
  id: Int!
  name: String!
  subject: Subject!
}

type Attendance {
  id: Int!
  date: DateTime!
  status: String!
  class: Class!
}

type Grade {
  id: Int!
  value: Float!
  gradedAt: DateTime!
  class: Class!
}

type UploadFile {
  id: Int!
  filename: String!
  mimetype: String!
  path: String!
  createdAt: DateTime!
}

type Teacher {
  id: Int!
  firstName: String!
  lastName: String!
  email: String!
  subjects: [Subject!]
}

type AuthResponse {
  accessToken: String!
}

type SubjectEntity {
  id: Int!
  name: String!
  teacherId: Int!
  teacher: Teacher!
}

type ClassEntity {
  id: Int!
  name: String!
  subjectId: Int!
  createdAt: DateTime!
}

type AssigmentEntity {
  id: Int!
  title: String!
  description: String
  dueDate: DateTime!
  subjectId: Int!
  subject: SubjectEntity!
  createdAt: DateTime!
}

type Query {
  hello: String!
  studentProfile: Student!
  studentClasses(input: PaginationSearchInput): [Class!]!
  studentAttendance(input: PaginationSearchInput): [Attendance!]!
  studentGrades(input: PaginationSearchInput): [Grade!]!
  allUploadedFiles: [UploadFile!]!
  teachers: [Teacher!]!
  teacher(id: Int!): Teacher!
  teacherProfile(teacherId: Int!): Teacher!
  subjects: [SubjectEntity!]!
  subject(id: Int!): SubjectEntity!
  getAllClasses(searchInput: ClassSearchInput): [ClassEntity!]!
  getClass(id: Int!): ClassEntity!
  findAllAssigments(searchInput: AssigmentSearchInput): [AssigmentEntity!]!
  findAssigment(id: Int!): AssigmentEntity!
}

input PaginationSearchInput {
  skip: Int
  take: Int
  query: String
}

input ClassSearchInput {
  query: String
  skip: Int
  take: Int
}

input AssigmentSearchInput {
  query: String
  skip: Int
  take: Int
}

type Mutation {
  sendEmail(input: SendEmailInput!): Boolean!
  registerStudent(data: RegisterStudentInput!): LoginStudentResponse!
  loginStudent(data: LoginStudentInput!): LoginStudentResponse!
  updateStudentProfile(data: UpdateStudentInput!): Student!
  uploadFile(input: CreateUploadInput!): UploadFile!
  deleteFile(fileId: Int!): String!
  createTeacher(data: CreateTeacherInput!): Teacher!
  updateTeacher(id: Int!, data: UpdateTeacherInput!): Teacher!
  deleteTeacher(id: Int!): Teacher!
  registerTeacher(data: CreateTeacherInput!): AuthResponse!
  loginTeacher(data: LoginTeacherInput!): AuthResponse!
  createSubject(input: CreateSubjectInput!): SubjectEntity!
  updateSubject(input: UpdateSubjectInput!): SubjectEntity!
  removeSubject(id: Int!): SubjectEntity!
  createClass(data: CreateClassInput!): ClassEntity!
  updateClass(id: Int!, data: UpdateClassInput!): ClassEntity!
  deleteClass(id: Int!): ClassEntity!
  createAssigment(data: CreateAssigmentInput!): AssigmentEntity!
  updateAssigment(data: UpdateAssigmentInput!): AssigmentEntity!
  removeAssigment(id: Int!): AssigmentEntity!
}

input SendEmailInput {
  to: String!
  subject: String!
  message: String!
}

input RegisterStudentInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  dateOfBirth: String!
}

input LoginStudentInput {
  email: String!
  password: String!
}

input UpdateStudentInput {
  firstName: String
  lastName: String
  email: String
  password: String
  dateOfBirth: String
  id: Float!
}

input CreateUploadInput {
  file: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateTeacherInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String
}

input UpdateTeacherInput {
  firstName: String
  lastName: String
  email: String
  password: String
}

input LoginTeacherInput {
  email: String!
  password: String!
}

input CreateSubjectInput {
  name: String!
  teacherId: Int!
}

input UpdateSubjectInput {
  name: String
  teacherId: Int
  id: Int!
}

input CreateClassInput {
  name: String!
  subjectId: Int!
}

input UpdateClassInput {
  name: String
  subjectId: Int
}

input CreateAssigmentInput {
  title: String!
  description: String
  dueDate: DateTime!
  subjectId: Int!
}

input UpdateAssigmentInput {
  title: String
  description: String
  dueDate: DateTime
  subjectId: Int
  id: Int!
}